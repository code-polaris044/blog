---
import Layout from "@layouts/layout.astro";
import Card from "@components/card.astro";
import Pagination from "@components/pagination.astro";


import { categories } from '@lib/constants'
import { getCollection } from "astro:content";
import { compareDesc } from "date-fns";


export async function getStaticPaths({ paginate }: { paginate: any } ) {

	const blogPosts = await getCollection('blog');
	const sortedBlogPosts = blogPosts.sort((a,b) =>
	compareDesc(a.data.pubDate, b.data.pubDate)
	);

	return categories.flatMap((category) => {
		const { categorySlug, categoryName } = category;

		const filteredPosts = sortedBlogPosts.filter((post)=> {
			return post.data.category.includes(categorySlug);
		})
			return paginate(filteredPosts, {
				params: { categorySlug },
				props: {categoryName },
				pageSize: 6
			});
	});
}


const {
    page: { 
        data = [],
        url: { prev, next }
    },
	categoryName,
} = Astro.props;
---


<Layout pageTitle={categoryName} description={`${categoryName}の一覧`}>
	<h1>{categoryName}</h1>
	<div class="grid"  data-pagefind-body>
		{
			data.map((post: { slug: string; data: { image: string; title: string } }) => {
				const {
					slug,
					data: { image, title, alt },
				} = post;
				return <Card url={`/blog/${slug}`} src={image} alt={alt} title={title} />;
			})
		}
	</div>

	<Pagination prev={prev} next={next} />
</Layout>
